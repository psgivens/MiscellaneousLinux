{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/symbol-observable/es/index.js","webpack:///./node_modules/redux/es/redux.js","webpack:///external \"React\"","webpack:///./node_modules/symbol-observable/es/ponyfill.js","webpack:///./src/components/Hello.tsx","webpack:///./src/actions/index.ts","webpack:///./src/reducers/index.ts","webpack:///(webpack)/buildin/harmony-module.js","webpack:///(webpack)/buildin/global.js","webpack:///external \"ReactDOM\"","webpack:///./src/index.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","root","_ponyfill_js__WEBPACK_IMPORTED_MODULE_0__","self","window","global","result","__webpack_exports__","ActionTypes","INIT","Math","random","toString","substring","split","join","REPLACE","_typeof","iterator","obj","constructor","_extends","assign","target","arguments","length","source","isPlainObject","proto","getPrototypeOf","createStore","reducer","preloadedState","enhancer","_ref2","undefined","Error","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","slice","getState","subscribe","listener","isSubscribed","push","index","indexOf","splice","dispatch","action","type","listeners","replaceReducer","nextReducer","symbol_observable__WEBPACK_IMPORTED_MODULE_0__","_ref","outerSubscribe","observer","TypeError","observeState","next","unsubscribe","this","getUndefinedStateErrorMessage","actionType","String","combineReducers","reducers","reducerKeys","keys","finalReducers","finalReducerKeys","shapeAssertionError","forEach","assertReducerShape","e","state","hasChanged","nextState","_i","_key","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","apply","bindActionCreators","actionCreators","boundActionCreators","compose","_len","funcs","Array","arg","reduce","a","b","applyMiddleware","middlewares","_len2","args","_key2","store","_dispatch","middlewareAPI","chain","map","middleware","React","symbolObservablePonyfill","observable","Hello","_super","__extends","render","createElement","props","compiler","framework","Component","incrementCounter","delta","resetCounter","redux_1","counterState","initialState","counter","isSaving","isLoading","error","originalModule","webpackPolyfill","children","g","Function","eval","ReactDOM","reducers_1","actions_1","Hello_1","console","log","document","getElementById"],"mappings":"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","file":"./bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","import $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar ActionTypes = {\n  INIT: '@@redux/INIT' + Math.random().toString(36).substring(7).split('').join('.'),\n  REPLACE: '@@redux/REPLACE' + Math.random().toString(36).substring(7).split('').join('.')\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj === null) return false;\n\n  var proto = obj;\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n/**\n * Creates a Redux store that holds the state tree.\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    if (isDispatching) {\n      throw new Error('You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected the listener to be a function.');\n    }\n\n    if (isDispatching) {\n      throw new Error('You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error('You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api-reference/store#subscribe(listener) for more details.');\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.REPLACE });\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if ((typeof observer === 'undefined' ? 'undefined' : _typeof(observer)) !== 'object' || observer === null) {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n}\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionDescription = actionType && 'action \"' + String(actionType) + '\"' || 'an action';\n\n  return 'Given ' + actionDescription + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, { type: ActionTypes.INIT });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning('No reducer provided for key \"' + key + '\"');\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  var unexpectedKeyCache = void 0;\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError = void 0;\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments[1];\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if ((typeof actionCreators === 'undefined' ? 'undefined' : _typeof(actionCreators)) !== 'object' || actionCreators === null) {\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators === 'undefined' ? 'undefined' : _typeof(actionCreators)) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nfunction compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(undefined, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      var store = createStore.apply(undefined, args);\n      var _dispatch = function dispatch() {\n        throw new Error('Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(undefined, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n/*\n * This is a dummy function to check if the function name has been altered by minification.\n * If the function has been minified and NODE_ENV !== 'production', warn the user.\n */\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning(\"You are currently using minified code outside of NODE_ENV === 'production'. \" + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { createStore, combineReducers, bindActionCreators, applyMiddleware, compose, ActionTypes as __DO_NOT_USE__ActionTypes };\n","module.exports = React;","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","import * as React from \"react\";\n\nexport interface HelloProps { compiler: string; framework: string; }\n\nexport class Hello extends React.Component<HelloProps, {}> {\n    render() {\n        return <h1>Hello from {this.props.compiler} and {this.props.framework}!</h1>;\n    }\n}","\n\n\nexport type Action = {\n    type: 'INCREMENT_COUNTER',\n    delta: number,\n} | {\n    type: 'RESET_COUNTER',\n}\n  \nexport const incrementCounter = (delta: number): Action => ({\n    type: 'INCREMENT_COUNTER',\n    delta,\n})\n  \nexport const resetCounter = (): Action => ({\n    type: 'RESET_COUNTER',\n})\n\n// import { api } from '../api'\n\n// import {\n//   Action,\n//   LoadCount,\n//   SaveCount,\n//   dispatcher,\n//   asReq,\n//   asRes,\n//   asErr,\n// } from './action'\n\n// export { Action }\n\n// export const incrementCounter = (delta: number): Action => ({\n//   type: 'INCREMENT_COUNTER',\n//   delta,\n// })\n\n// export const resetCounter = (): Action => ({\n//   type: 'RESET_COUNTER',\n// })\n\n// export const loadCount = dispatcher(api.load)<LoadCount>(\n//   asReq('LOAD_COUNT_REQUEST'),\n//   asRes('LOAD_COUNT_SUCCESS'),\n//   asErr('LOAD_COUNT_ERROR'))\n\n// export const saveCount = dispatcher(api.save)<SaveCount>(\n//   asReq('SAVE_COUNT_REQUEST'),\n//   asRes('SAVE_COUNT_SUCCESS'),\n//   asErr('SAVE_COUNT_ERROR'))\n","export namespace Store {\n\n    export type Counter = { value: number }\n  \n    export type All = {\n      counter: Counter\n    }\n  }\n\n\n//   import { Action } from '../actions'\n\n// const initialState: Store.Counter = {\n//   value: 0,\n// }\n\n// function counter (state: Store.Counter = initialState, action: Action): Store.Counter {\n//   const { value } = state\n//   switch (action.type) {\n//     case 'INCREMENT_COUNTER':\n//       const newValue = value + action.delta\n//       return { value: newValue }\n//     case 'RESET_COUNTER':\n//       return { value: 0 }\n//   }\n\n//   return state\n// }\n\n\n\n\n\n\nimport { combineReducers } from 'redux'\n\nimport { Action } from '../actions'\n\nexport type Counter = { value: number }\n\nexport type All = {\n  counter: Counter,\n  isSaving: boolean,\n  isLoading: boolean,\n  error: string,\n}\n\nfunction isSaving (state: boolean = false, action: Action): boolean {\n  switch (action.type) {\n    // case 'SAVE_COUNT_REQUEST':\n    //   return true\n    // case 'SAVE_COUNT_SUCCESS':\n    // case 'SAVE_COUNT_ERROR':\n    //   return false\n    default:\n      return state\n  }\n}\n\nfunction isLoading (state: boolean = false, action: Action): boolean {\n  switch (action.type) {\n    // case 'LOAD_COUNT_REQUEST':\n    //   return true\n    // case 'LOAD_COUNT_SUCCESS':\n    // case 'LOAD_COUNT_ERROR':\n    //   return false\n    default:\n      return state\n  }\n}\n\nfunction error (state: string = '', action: Action): string {\n  switch (action.type) {\n    // case 'LOAD_COUNT_REQUEST':\n    // case 'SAVE_COUNT_REQUEST':\n    //   return ''\n    // case 'LOAD_COUNT_ERROR':\n    // case 'SAVE_COUNT_ERROR':\n    //   return action.error\n    default:\n      return state\n  }\n}\n\nconst counterState: Counter = {\n  value: 0,\n}\n\nfunction counter (state: Counter = counterState, action: Action): Counter {\n  switch (action.type) {\n    case 'INCREMENT_COUNTER':\n      const { delta } = action\n      return { value: state.value + delta }\n\n    case 'RESET_COUNTER':\n      return { value: 0 }\n\n    // case 'LOAD_COUNT_SUCCESS':\n    //   return { value: action.response.value }\n\n    default:\n      return state\n  }\n}\n\nexport const initialState = {\n  counter: counterState,\n  isSaving: false,\n  isLoading: false,\n  error: '',\n}\n\nexport const reducers = combineReducers<All>({\n  counter,\n  isSaving,\n  isLoading,\n  error,\n})\n\n//export reducers;\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = ReactDOM;","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nimport { createStore, Store as ReduxStore } from 'redux'\nimport { reducers, Store } from './reducers'\nimport { incrementCounter } from './actions'\n\nconst store: ReduxStore<Store.All> = createStore(reducers)\n\n\n\nimport { Hello } from \"./components/Hello\";\n\nfunction test() {\n    console.log('test')\n}\n\ntest()\n\nstore.subscribe(() => {\n    console.log(store.getState())\n  })\n  \n  store.dispatch(incrementCounter(1)) // { counter: { value: 1 } }\n  store.dispatch(incrementCounter(1)) // { counter: { value: 2 } }\n  store.dispatch(incrementCounter(1)) // { counter: { value: 3 } }\n\nReactDOM.render(\n    <Hello compiler=\"TypeScript\" framework=\"React\" />,\n    document.getElementById(\"example\")\n);"],"sourceRoot":""}